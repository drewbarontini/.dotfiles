# *************************************
#
#   Functions - General
#
# *************************************

# -------------------------------------
#   Clean URL
#   -> Remove extraneous characters from URL
# -------------------------------------
#
# $1 - the URL
#
# Usage: `clean_url 'google.com'`
#

function clean_url() {
  echo $1 | sed 's/\.[[:alnum:]]*//' | tr ./_ -
}

# -------------------------------------
#   Copy File Contents
#   -> Copies a files' contents to clipboard
# -------------------------------------
#
# $1 - The file to copy
#
# Usage: `copy_file_contents file.txt`
#

function copy_file_contents() {
  cat $1 | pbcopy
  echo "-- '$1' copied to the clipboard! --"
}

# -------------------------------------
#   Count Occurences Of
#   -> Count the number of occurrences of string
# -------------------------------------
#
# $1 - the string
#
# Usage: `count_occurrences_of 'my string'`
#

function count_occurrences_of() {
  local count=$(ag "$1" | wc -l | tr -d '[[:space:]]')
  echo "There are $count occurrences of '$1'."
}

# -------------------------------------
#   Create Symlink
#   -> Creates a symlink from two files
# -------------------------------------
#
# $1 - The file to create a symlink from
# $2 - The file the symlink is to
#
# Usage: `create_symlink path/to/file path/to/file`
#

function create_symlink() {
  # Create the new file
  touch $2

  # Copy the original file contents into the new file
  while read line; do
   echo $line >> $2
  done < $1

  # Remove the original file
  rm $1

  # Create the symlink
  ln -s $2 $1
}

# -------------------------------------
#   Curl To
#   -> Curls a file to a specified location
# -------------------------------------
#
# $1 - The file to curl
# $2 - The file location to save it to
#
# Usage: `curl_to http://example.com/file.js path/to/file.js`
#

function curl_to() {
  curl -s "$1" >> "$2"
  echo "--'$1' copied to '$2' --"
}

# -------------------------------------
#   Delete Files
#   -> Deletes files with a pattern
# -------------------------------------
#
# $1 - the file(s)
#
# Usage: `delete_files .DS_Store`
#

function delete_files() {
  find . -name $1 -delete
}

# -------------------------------------
#   Dispatch
#   -> Check if project has setup function and run it
# -------------------------------------
#
# Usage: `dispatch`
#

function dispatch() {
  local path=$(pwd)
  local project=$(basename $path)

  if [ "$DISPATCHED" == 0 ]; then
    if type -t "$project"_setup | grep -i function > /dev/null; then
      "$project"_setup
      DISPATCHED=1
    fi
  fi
}

# -------------------------------------
#   Find Alias
#   -> Greps for an alias
# -------------------------------------
#
# $1 - the alias name
#
# Usage: `find_alias 'gba'`
#

function find_alias() {
  alias | grep "alias\s$1"
}

# -------------------------------------
#   Get Process ID
#   -> Returns a process id or set of ids for specified process
# -------------------------------------
#
# $1 - the process id
#
# Usage: `get_process_id ruby`
#

function get_process_id() {
  ps aux | grep $1 | awk '{print $2}'
}

# -------------------------------------
#   Make Directory & CD
#   -> Creates a directory and moves into it
# -------------------------------------
#
# Usage: `mcd my-cool-directory`
#

function mcd() {
  mkdir $1 && cd $1
}

# -------------------------------------
#   Open
#   -> Opens a URL
# -------------------------------------
#
# Usage: `o google.com`, `o l 3000`, `o m`
#

function o() {
  if [ "$1" == 'l' ]; then
    open http://localhost:$2/$3
  elif [ "$1" == 'm' ]; then
    open http://localhost:4567/$2
  else
    open http://$1
  fi
}

# -------------------------------------
#   Resize Images
#   -> Batch resize specified images
# -------------------------------------
#
# $1 - the file extension
# $2 - the size
#
# Usage: `resize_images png 110x110`
#

function resize_images() {
  shopt -s nullglob
  for image in *.$1; do
    mogrify -resize $2 "${image}"
  done
}

# -------------------------------------
#   Run
#   -> Run a command a set number of times
# -------------------------------------
#
# $1 - the number of times to run the command
# $2 - the command to run
#
# Usage: `run 5 some_command`
#

function run() {
  num=$1
  shift
  for i in `seq $num`; do
    $@
  done
}

# -------------------------------------
#   Run Shell Script
#   -> Run a shell script passed in via curl
# -------------------------------------
#
# $1 - the shell script
#
# Usage: `run_sh http://www.example.com/install.sh`
#

function run_sh() {
  bash <(curl -s $1)
}

# -------------------------------------
#   Server
#   -> Simple HTTP server from a directory, optionally specifying a port
# -------------------------------------
#
# $1 - the port (optional)
#
# Usage: `server`
#

function server() {
  local port="${1:-8000}"
  open "http://localhost:${port}/"
  python -m SimpleHTTPServer "$port"
}

# -------------------------------------
#   Symlinks
#   -> List symlink files in a specified directory
# -------------------------------------
#
# $1 - the directory
#
# Usage: `symlinks ~`
#

function symlinks() {
  ls -al "$1" | grep .-\>
}

# -------------------------------------
#   Update NVM
#   -> Runs the commands to update NVM
# -------------------------------------
#
# Usage: `update_nvm`
#

function update_nvm() {
  (
    cd "$NVM_DIR"
    git fetch --tags origin
    git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`
  ) && \. "$NVM_DIR/nvm.sh"
}
